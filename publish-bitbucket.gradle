apply plugin: 'maven'

repositories {
    maven { url "https://raw.github.com/synergian/wagon-git/releases" }
}

configurations {
    deployLibrary
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    deployLibrary "ar.com.synergian:wagon-git:0.2.0"
}

task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

task lookForArtifacts {
    doLast {
        def artifactName = ARTIFACT_NAME + '-' + ARTIFACT_VERSION + '.aar'
        def artifactPath = ARTIFACT_PACKAGE.replace(".", "/") + "/" + ARTIFACT_NAME + "/" + ARTIFACT_VERSION + "/" + artifactName
        def repositoryUrl = 'https://api.bitbucket.org/1.0/repositories/' + COMPANY + '/' + REPOSITORY_NAME + '/raw/releases/' + artifactPath

        println("")
        println("Checking if artifact already exists: " + artifactName)
        println("at URL: " + repositoryUrl)




       
       return true
    }
}

uploadArchives.dependsOn lookForArtifacts

uploadArchives {

    repositories.mavenDeployer {
        configuration = configurations.deployLibrary
        repository(url: 'git:maven_repo://git@bitbucket.virginpulse.com:7999/proj/android-dfu-library.git')

        uniqueVersion = true

        pom.project {
            groupId = ARTIFACT_PACKAGE
            version = ARTIFACT_VERSION
            artifactId = ARTIFACT_NAME
            packaging ARTIFACT_PACKAGING
        }
    }
}
def getBase64EncodedCredentials() {
    def s = USERNAME + ":" + PASSWORD;
    return s.bytes.encodeBase64().toString()
}
